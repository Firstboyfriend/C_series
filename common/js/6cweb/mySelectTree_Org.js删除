/*========================================================================================*
* 功能说明：下拉树_组织封装
* 作    者： zzj
* 版本日期：2014.12.6
* 参数说明：
OrgCode    编码：TOPBOSS

取值：
code值 $('#hf_"+objID).val();
type值 $('#hf_type_"+objID).val();
*=======================================================================================*/

(function ($) {
    $.fn.mySelectTree_Org = function (options) {
        var defaults = {
            OrgCode: 'TOPBOSS'
        };



        var objID = $(this).attr('id'); //inputID;
        var objW = $(this).width();
        var menuContentID = 'menuContent_' + objID;
        var treeDemoID = "treeDemo_" + objID;

        var inputV = "hf_" + objID;
        var inputV2 = "hf_type_" + objID;

        $(this).click(function () {
            showMenu();
            return false;
        })


        $(this).blur(function () {
            hideMenu();
        })


        var divhtml = '<div id="' + menuContentID + '" class="box-content well" style="display: none; position: absolute; z-index: 999999999999"><ul id="' + treeDemoID + '" class="ztree" style="margin-top: 0; min-width: ' + objW + 'px;"> </ul></div>';

        $(this).parent().append(divhtml);


        $(this).parent().append("<div style='display:none'><input id='" + inputV + "' /><input id='" + inputV2 + "' /></div>")



        var opts = $.extend(defaults, options);

        var settingaf = {
            view: {
                dblClickExpand: false
            },
            data: {
                simpleData: {
                    enable: true
                }
            },
            callback: {
                beforeClick: beforeClick,
                onClick: afonClick
            }
        };

        var zNodes = getzNodes();

        loadTree();

        //获取树数据节点
        function getzNodes() {
            var url = "/Common/RemoteHandlers/GetOrg.ashx?OrgCode=" + opts.OrgCode;
            var json;
            $.ajax({
                type: "POST",
                url: url,
                async: false,
                cache: true,
                success: function (result) {
                    json = eval('(' + result + ')');
                }
            });
            return json;
        };

        function beforeClick(treeId, treeNode) {
            var check = (treeNode);
            return check;
        }

        //加载树
        function loadTree() {

            $.fn.zTree.init($("#" + treeDemoID), settingaf, zNodes);
            var zTree1 = $.fn.zTree.getZTreeObj(treeDemoID);
            zTree1.expandAll(true);
        };

        //树点击事件
        function afonClick(e, treeId, treeNode) {
            //            var zTree = $.fn.zTree.getZTreeObj(treeDemoID),
            //			nodes = zTree.getSelectedNodes(),
            //			v = "";
            //            nodes.sort(function compare(a, b) { return a.id - b.id; });
            //            for (var i = 0, l = nodes.length; i < l; i++) {
            //                v += nodes[i].name + ",";
            //            }
            //            if (v.length > 0) v = v.substring(0, v.length - 1);
            //            $('#' + objID).val(v);


            $('#' + objID).val(treeNode.name);

            $('#' + inputV).val(treeNode.id);

            $('#' + inputV2).val(treeNode.type);

            hideMenu();


        }

        function showMenu() {
            var cityObj = $('#' + objID);
            var cityOffset = $('#' + objID).offset();
            $("#" + menuContentID).css({ left: cityOffset.left + "px", top: cityOffset.top + cityObj.outerHeight() + "px" }).slideDown("fast");


            
            $("body").bind("mousedown", onBodyDown2);
        }


        function onBodyDown2(event) {
            if (!(event.target.id == objID || event.target.id == menuContentID || $(event.target).parents("#" + menuContentID).length > 0)) {
                hideMenu();
            }
        }

        function hideMenu() {
            $("#" + menuContentID).fadeOut("fast");
            $("body").unbind("mousedown", onBodyDown2);
        }


        function getChildren(ids, treeNode) {

            ids.push(treeNode.name);

            if (treeNode.isParent) {

                for (var obj in treeNode.children) {

                    getChildren(ids, treeNode.children[obj]);

                }

            }

            return ids;

        }



    };
})(jQuery);


